#!/bin/sh

# Configurables
MIN_UPTIME_SECONDS=120
PING_CHECK_ADDRESS_A=8.8.8.8
PING_CHECK_ADDRESS_B=1.1.1.1
MONITORED_INTERFACE=igc0

# Get current uptime of system.
curtime=$(date +%s)
uptime=$(sysctl kern.boottime | awk -F'sec = ' '{print $2}' | awk -F',' '{print $1}')
uptime=$(($curtime - $uptime))

# Only proceed if we've been up long enough.
if [ $uptime -gt $MIN_UPTIME_SECONDS ]; then
    logger -t pingcheck "Testing network connectivity. Current uptime is $uptime seconds."

    # Check that the monitored interface has an IP address. If not, reset the interface and exit.
    MONITORED_INTERFACE_IP=$(/sbin/ifconfig "$MONITORED_INTERFACE" | awk '/inet / {print $2}')
    if [ -z "$MONITORED_INTERFACE_IP" ]; then
	logger -t pingcheck "No IPv4 address detected on interface $MONITORED_INTERFACE. Resetting the interface."
	/sbin/ifconfig $MONITORED_INTERFACE down
	/sbin/ifconfig $MONITORED_INTERFACE up
        sleep 20
        logger -t pingcheck "Reset $MONITORED_INTERFACE."
        exit 0
    else
        logger -t pingcheck "Detected IPv4 address $MONITORED_INTERFACE_IP on interface $MONITORED_INTERFACE."
    fi

    # Test both configured test IPs. Reset the interface if both fail.
    if ! ping -c 1 $PING_CHECK_ADDRESS_A > /dev/null 2>&1; then
	logger -t pingcheck "Ping to $PING_ADDRESS_A failed. Trying $PING_ADDRESS_B."
        if ! ping -c 1 $PING_CHECK_ADDRESS_B > /dev/null 2>&1; then
            logger -t pingcheck "Failed to ping $PING_ADDRESS_A and $PING_ADDRESS_B. Resetting $MONITORED_INTERFACE."
            /sbin/ifconfig $MONITORED_INTERFACE down
            /sbin/ifconfig $MONITORED_INTERFACE up
            sleep 20
            logger -t pingcheck "Reset $MONITORED_INTERFACE."
       else
            logger -t pingcheck "Ping to $PING_CHECK_ADDRESS_B successful."
       fi
    else
       logger -t pingcheck "Ping to $PING_CHECK_ADDRESS_A successful."
    fi
else
    logger pingcheck "System rebooted recently. Waiting until uptime is atleast $MIN_UPTIME_SECONDS seconds to test connectivity. "
fi
